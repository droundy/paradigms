# Generated by Django 2.2.3 on 2020-03-04 02:00

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('overview_paragraph', models.TextField(blank=True, null=True)),
                ('time_estimate', models.IntegerField(blank=True, null=True)),
                ('what_students_learn', models.TextField(blank=True, null=True)),
                ('type_of_beast', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('equipment_required', models.TextField(blank=True, null=True)),
                ('topics', models.TextField(blank=True, null=True)),
                ('instructor_guide', models.TextField(blank=True, null=True)),
                ('publication_status', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('prerequisite_knowledge', models.TextField(blank=True, null=True)),
                ('activity_image', models.ImageField(blank=True, null=True, upload_to='activity_images/')),
                ('keywords', models.TextField(blank=True, null=True)),
                ('associated_paper_links', models.TextField(blank=True, null=True)),
                ('program_learning_outcomes', models.TextField(blank=True, null=True)),
                ('course_learning_outcomes', models.TextField(blank=True, null=True)),
                ('learning_progression_concepts', models.TextField(blank=True, null=True)),
                ('course', models.CharField(blank=True, max_length=255, null=True)),
                ('author_info', models.CharField(blank=True, max_length=4096, null=True)),
                ('old_name', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_edit_activity', 'Edit Activity'), ('can_add_activity', 'Add Activity'), ('can_view_solution', 'View Solution')),
            },
        ),
        migrations.CreateModel(
            name='ActivityMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('media_category', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to='activity_media/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Figure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to='figures/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('media_category', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FigureAssociations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('figure_position', models.PositiveIntegerField(blank=True, null=True)),
                ('figure_title', models.CharField(blank=True, max_length=255, null=True)),
                ('figure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.Figure')),
            ],
        ),
        migrations.CreateModel(
            name='PageMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('media_category', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to='page_media/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageMediaAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('media_position', models.PositiveIntegerField(blank=True, null=True)),
                ('media_title', models.CharField(blank=True, max_length=255, null=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.PageMedia')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_title', models.CharField(max_length=255)),
                ('problem_latex', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('attribution', models.CharField(blank=True, help_text='Original source information.', max_length=255, null=True)),
                ('old_name', models.CharField(blank=True, help_text='Name from original homework archive.', max_length=255, null=True)),
                ('topics', models.TextField(blank=True, help_text='Comma-separated list of topics: adiabatic susceptibility,entropy', null=True)),
                ('course', models.CharField(blank=True, max_length=255, null=True)),
                ('publication', models.BooleanField(default=False, help_text='Problem is ready for public viewing', verbose_name='Publish Problem')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('figures', models.ManyToManyField(related_name='problems', through='admin_app.FigureAssociations', to='admin_app.Figure')),
            ],
            options={
                'permissions': (('can_edit_problem', 'Edit Problem'), ('can_add_problem', 'Add Problem'), ('can_view_solution', 'View Solution')),
            },
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('author_info', models.CharField(blank=True, max_length=4096, null=True)),
                ('publication', models.BooleanField(default=False, help_text='Problem Set is ready for public viewing', verbose_name='Publish Problem Set')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_edit_problem_set', 'Edit Problem Set'), ('can_add_problem_set', 'Add Problem Set'), ('can_view_solution', 'View Solution')),
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('overview_paragraph', models.TextField(blank=True, null=True)),
                ('author_info', models.CharField(blank=True, max_length=4096, null=True)),
                ('publication', models.BooleanField(default=False, help_text='Sequence is ready for public viewing', verbose_name='Publish Sequence')),
            ],
            options={
                'permissions': (('can_edit_sequence', 'Edit Sequence'), ('can_add_sequence', 'Add Sequence'), ('can_view_solution', 'View Solution')),
            },
        ),
        migrations.CreateModel(
            name='SequenceItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_position', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('role_in_sequence', models.TextField(blank=True, null=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemActivities', to='admin_app.Activity')),
                ('problem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemProblems', to='admin_app.Problem')),
                ('sequence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemSequences', to='admin_app.Sequence')),
            ],
        ),
        migrations.AddField(
            model_name='sequence',
            name='activities',
            field=models.ManyToManyField(related_name='activities', through='admin_app.SequenceItems', to='admin_app.Activity'),
        ),
        migrations.AddField(
            model_name='sequence',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sequence',
            name='problems',
            field=models.ManyToManyField(related_name='problems', through='admin_app.SequenceItems', to='admin_app.Problem'),
        ),
        migrations.CreateModel(
            name='ProblemSetItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_position', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=5, null=True)),
                ('item_instructions', models.TextField(blank=True, null=True)),
                ('problem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemProblem', to='admin_app.Problem')),
                ('problem_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.ProblemSet')),
            ],
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),
                ('page_content', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated list of topics or keywords: adiabatic susceptibility,entropy', null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('whitepaper', models.BooleanField(default=False, help_text='Is this a whitepaper?', verbose_name='Whitepaper')),
                ('whitepaper_category', models.TextField(blank=True, help_text='If this page is meant to be a whitepaper, please select a category. The category list is maintained by system administrators and can not be dynamic.', null=True)),
                ('media', models.ManyToManyField(related_name='pagemedias', through='admin_app.PageMediaAssociation', to='admin_app.PageMedia')),
            ],
            options={
                'permissions': (('can_edit_pages', 'Edit Pages'), ('can_add_pages', 'Add Pages')),
            },
        ),
        migrations.AddField(
            model_name='pagemediaassociation',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.Pages'),
        ),
        migrations.CreateModel(
            name='MediaAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('media_position', models.PositiveIntegerField(blank=True, null=True)),
                ('media_title', models.CharField(blank=True, max_length=255, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.Activity')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.ActivityMedia')),
            ],
        ),
        migrations.AddField(
            model_name='figureassociations',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.Problem'),
        ),
        migrations.AddField(
            model_name='activity',
            name='media',
            field=models.ManyToManyField(related_name='medias', through='admin_app.MediaAssociation', to='admin_app.ActivityMedia'),
        ),
    ]
